--- 
- name: Installing MariaDB Server
  package:
    name: mariadb-server
    state: latest
    update_cache: true
  become: true

- name: install mariadb needed packages
  package: name={{ item }} state=present
  with_items:
    - gcc
    - python3-dev
  become: true

- name: install python package
  become: true
  package:
    name: python3-mysqldb
    state: latest

# - name: configure mariadb to bind to all addresses
#   bl:
#     path: /etc/mysql/my.cnf
#     regexp: ^bind-address
#     line: bind-address = 0.0.0.0
#     state: present
#     backup: yes
#   become: true
#   notify:
#     - restart mariadb

- name: service
  service: name=mariadb state=started enabled=yes
  become: true

- name: Add [mysqld] section header before bind-address
  blockinfile:
    path: /etc/mysql/my.cnf
    block: |
      [mysqld]
      bind-address=0.0.0.0
    create: yes
    insertafter: EOF
  become: true
  notify:
    - restart mariadb


- name: update mysql root password for all root accounts
  mysql_user: name=root host={{ item }} password={{ mysql_root_pass }}
  with_items:
   - 127.0.0.1
   - ::1
   - localhost
  become: true
  notify:
    - restart mariadb

- name: copy .my.cnf file with root password credentials
  template:
    src: my.cnf
    dest: ~/.my.cnf
    mode: 0600
  become: true
  notify:
    - restart mariadb


- name: create a new database for Drupal
  mysql_db: name={{ drupal_db_name }} state=present
  become: true
  notify:
    - restart mariadb

- name: create a new database user for Drupal
  become: true
  mysql_user: name={{ drupal_db_user }}  password={{ drupal_db_pass }}
                priv="{{ drupal_db_name }}.*:ALL" state=present host={{ item }}
  with_items: 
    - "{{ hostvars['web-server1']['ansible_ec2_local_ipv4'] }}"
    - "{{ hostvars['web-server2']['ansible_ec2_local_ipv4'] }}"
  notify:
    - restart mariadb

- meta : flush_handlers
